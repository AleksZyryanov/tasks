Detected time complexity: O(N**3)


// you can also use imports, for example:
// import java.util.*;

// you can write to stdout for debugging purposes, e.g.
// System.out.println("this is a debug message");

class Solution {
    public int solution(int[] A) {
        // write your code in Java SE 8
        int res = Integer.MIN_VALUE;
        int first, second, third;

        for(int i = 0; i < A.length - 2; i++){
            first = i;
            for(int j = (i + 1); j < A.length -1; j++){
                second = j;
                for(int k = (j + 1); k < A.length; k++){
                    third = k;
                    if(A[first] * A[second] * A[third] > res) res = A[first] * A[second] * A[third];
                }
            }
        }
        return res;
    }
}


      O(N * log(N))
// you can also use imports, for example:
// import java.util.*;

// you can write to stdout for debugging purposes, e.g.
// System.out.println("this is a debug message");

class Solution {
public int solution(int[] A) {
        int max1 = Integer.MIN_VALUE;
        int max2 = Integer.MIN_VALUE;
        int max3 = Integer.MIN_VALUE;
        int min2 = Integer.MAX_VALUE;
        int min1 = Integer.MAX_VALUE;

        for (int a : A){
            if (a > max1){
                max3 = max2;
                max2 = max1;
                max1 = a;
            }else if (a > max2){
                max3 = max2;
                max2 = a;
            }else if (a > max3){
                max3 = a;
            }

            if (a < min1){
                min2 = min1;
                min1 = a;
            }else if (a < min2){
                min2 = a;
            }
        }

        int res = max1 * max2 * max3;

        if (max1 <= 0 || min1 >= 0){
            return res;
        }else {
            if (min2 < 0 ){
                int temp = max1 * min1 * min2;
                if (temp > res) return temp;
            }
        }

        return res;
    }
}
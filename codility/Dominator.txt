// you can also use imports, for example:
import java.util.*;

// you can write to stdout for debugging purposes, e.g.
// System.out.println("this is a debug message");

class Solution {
    public int solution(int[] A) {
        // write your code in Java SE 8
        HashMap<Integer, Integer> map = new HashMap<>();
        int res = - 1;
        int count = - 1;
        int max = - 1;

        if(A.length == 1) return 0;
        for(int i =0; i < A.length; i++){
            if(map.containsKey(A[i])) {
                map.put(A[i], map.get(A[i]) + 1);
                if(map.get(A[i]) > count) {
                    max = A[i];
                    count = map.get(max);
                }
            } else {map.put(A[i], 1);}
        } 

        if(count <= A.length / 2) return -1;

        for(int j = 0; j < A.length; j++){
            if(A[j] == max) {res = j; break;}
        }
        return res;
    }
}





// you can also use imports, for example:
import java.util.*;

// you can write to stdout for debugging purposes, e.g.
// System.out.println("this is a debug message");

class Solution {
    public int solution(int[] A) {
        // write your code in Java SE 8
        HashMap<Integer, int[]> map = new HashMap<>();

        if(A.length == 1) return 0;
        if(A.length == 0) return -1;
        for(int i =0; i < A.length; i++){
            int j =i;
            if(map.containsKey(A[i])) {
                map.put(A[i], new int[]{map.get(A[i])[0], map.get(A[i])[1] + 1});
                if(map.get(A[i])[1] > (double)A.length/2){return(map.get(A[i])[0]);
                }
            } else {map.put(A[i], new int[]{i, 1});}
        } 

        return -1;
    }
}